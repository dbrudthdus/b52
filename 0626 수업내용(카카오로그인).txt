20230626 수업
[resultMap]
-> 실제 DB에 값을 넣어줘서 로그인 처리

MemberVO? 
group by로 묶어서 연결

*동적 쿼리는 어노테이션 보다는 xml로 사용해야 편함

*Access Denied 처리
*Remember Me 쿠키 처리
*logout


*AccessDeniedHandler API


==================================================

[화면]
화면 -> 태그 -> 시큐리티 라이브러리
*구글 로그인은 자료 주실 거임
JWT 로그인(난이도 상)

데이터베이스 테이블 설계



엔진엑스 html 폴더에 dist, plugins 넣어주기
b52 리소스에 static, templates 바꿔주기

==================================================
[OAUTH]
-> 사용자 오픈 인가
- 제3자 서비스
ex) A라는 회사의 서비스 만들어 줌 -> A라는 회사의 인증 서비스 사용X 
-> 제3자의 인증/인가 대행 =>OAUTH
--> A는 DB에 회원 정보를 보관할 필요 유무? -> 有
- 디테일한 정보를 다 주진 않음, 지극히 적은 정보만 제공 => 서비스를 원활하게 이용 불가
--> 로그인 직후에 바로 이동? 정보 수정? -> 정보 수정
=> 과정이 복잡하기 때문에 개인 정보를 다루는 라이브러리 추가


*카카오 로그인(SNS 로그인)
- 프로세스부터 이해를 해야 함

===========================================

Kakao RestAPI key: 4cb3e6f4aedf32ab6e0335fdcfc8c417
보안: ZhOPYJXWJKblpMVjz4DOMkx2nZVOMOTt

============================================

카카오 개발자 가입 후 새 애플리케이션 생성
-> 플랫폼 설정하기 -> web -> http://localhost:8080 지정
-> Redirect URI 등록해야 함 -> 강사님 드라이브 확인(0626) 
-> http://localhost:8080/login/oauth2/code/kakao 복사
-> Redirect URI 등록하러 가기 -> 활성화 ON -> 동의 화면 미리보기 확인
-> Redirect URI에 복사한 경로 입력 후 저장(고정된 값)
-> 동의 목적 작성 
-> 좌측 메뉴 중 동의항목 -> nickname 설정 선택 동의(대부분의 경우 선택 동의로 함)
-> 이메일 -> 선택 동의 -> 체크 박스 체크 -> 아이디 사용 목적
-> 좌측 메뉴 중 보안 -> Client Secret 코드 생성 -> 코드 생성됨

-> properties에 드라이브에 올려진 거 다 입력하고 api랑 보안 코드 넣기
-> config 수정
-> localhost:8080/login에 들어갔을 때, 카카오 확인되어야 함
===============================================

*라이브러리 추가해야 함
implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

===============================================

https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api
ex)롯데월드
*인가 코드: 입장권(구경만 할 수 있음)과 같은 개념
*토큰: 티켓(놀이기구 탑승 가능)과 같은 개념 = access token(유효기간이 짧음)

===============================================

1. 일반 회원
/member/signup (회원가입) -> 디비에 바로 보관
2. 소셜 회원 (카카오)
카카오로 로그인 하면 이메일을 알아내 memberDTO로 받음
-> db에 존재할 수도, 존재하지 않을 수도 있음
-> 로그인 직후 -> 이동 -> 정보 수정